How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it will be obvious that there are some lines added or removed from the file , so you can capture the difference between both

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could happen that anyone can edit in the file, so if this editing was destroying the code so you will need to go back to the original version before editing

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The size of the file could be too small or too big and you can't label every change or chunck them in a logical type of  commit. so Git is more efficient in this part.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because some files have a connection between each other, so if one of them has changed the other will be affected.

How can you use the commands git log and git diff to view the history of files?

    You use command "git log" to know the commit ID so you can use comman "git diff" to know the difference between it and the previous commit.

How might using version control make you more confident to make changes that
could break something?

    Because you have every tool to restore back the code before that error happened. 

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it to make some awesome applications that will help my career


